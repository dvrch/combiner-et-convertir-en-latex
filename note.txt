langue : francais
# Obsidian Markdown Combiner Plugin

**Objective:** Develop an Obsidian plugin that combines the content of a main Markdown file with its linked Markdown files (e.g., `![[another_note]]`). The plugin should recursively include content from nested links, resulting in a single, consolidated Markdown file.

**Technology Stack:**
*   **Framework:** Svelte (targeting version 4, as version 5 has known issues). All core functionalities should be implemented using Svelte components.
*   **Language:** svelte 4 (+TypeScript  
*   **Package Manager:** pnpm

**Core Principles:**
*   **Simplicity & Logic:** The code should be easy to understand and follow clear logical patterns.
*   **Intelligence & Flexibility:** The plugin should be robust enough to handle various linking scenarios and allow for future expansions (e.g., integration with external data sources like APIs or YAML files).
*   **Usability & Collaboration:** The plugin should be intuitive for users and designed for easy maintenance and collaborative development.

**Inspiration/Reference:**
The plugin's core functionality is inspired by the Python workflow found at `/c:\Users\dvrch\Desktop\4plug\.obsidian\plugins\Straightforward-Obsidian2Latex-DV`. While that workflow targets LaTeX output, this plugin aims to achieve similar Markdown consolidation directly within Obsidian. We seek a more robust and simpler parsing logic than the referenced Python workflow, potentially exploring structured data approaches (e.g., YAML-like syntax for configuration or linking).

utiliser pnpm et non npm
noms relatifs au contenu
tout en composant svelte 4

------------
je vois toujour des indices de l aincien plugin @manifest.json
je vois des commposant es type script, pourtant c est svelte 4 q on a deamn¬µand√©, donc extraire des ts pour mettre dans des composantes svelte (ne garder que le stric≈£minimm si oublig√© d avoir  des fichier ts)
en plus j ai demand√© a ce q on travaille qu avec des composante svelte, ne laisser dans les *.ts que les fichier et contenu absolument obligatoir 
------------

supprimer toute la configuration git de ce dossier avant de recreer (donc avec suppression de @/.git)
tu te souvien bien que c est un plugin obsidian qu on consstruit ici ?

----------
le dossier test se trouve normalement dans  le vault  et pas dan·π°plugin .
c est li icic @/test-vault 
 le dossier du plugin c est @/combiner et convertir en latex 
--------------
si le mom du combin√© existe deja, ajouter un num√©ro devant
--------------
mais avant de corriger, creer u depot github et poster dessus
sans oublier la config git convenable . par example giignore convenable pour pas charger tout et n importe quoi  en  locurence les installations NODE
 en svelte, rapelle toi (j ne sais pas pourquoi tu me crait des *.ts)
 et qd je demande du svelte, c est pas juste du *.ts renom√© en fichier svelte , c est eviter au max *.ts a l interieur, tout faire pour qe la logique utilise le max de svelte, evitant au mieux le *.ts
 ---------
>  structure inteligeament lensemble , et netoyer, code simple, organis√© et performant , facile pour lle travail en equipe e tla liaison via contennu YAML et API  et Base de donn√©s
----------

c bien de garder  le ration de l image embeded, mai je ne comprend pas pourquoi l extention du embeded n est pas conserv√© 
> je penses que certaain fichier  apel√© devrait rester tel quel, a l instar des images ou de tuc extre/externe  comme svg
--------
 marquer dan·π°le bloc embeded les endroit imbriqu√©s avec leur noms

 > format de commentires dans obsidian : `%%comt ici, mmem en multiligne%%`
--------

> references crois√©s dans le fichier combin√©: | si une reference, un revois pointait entre 2 fichiers amboit√©s dans le fichier combin√©, le revois sera desormais dans ce meme fichier ou les 2 se trouvent , don tout internalis√© dans le fichier combin√©  (puisque qu on aura a faire un docmet comple avec references crois√©s apres) 
> ( nb : je ne sais pas comment seront g√©r√©s les marques de renvois dans le  vault, j ai l impresson que les renvois seront dupliqu√©, et cela peut preter a confusion)
---------
> internaliser les renvois references crois√©s dans le fichier combin√© entre les √©l√©ments emboit√©s
> On peut ajouter la mention `comb` dans les references et renvois du fichier combin√© pour distinguer
> tu n as pas bien sais: si Apointee sur B; et A et B soit appe√©l√© dans  le meme fichier C ; en combinant C, ldans le C combin√©, l amboit√© A' de A doit dans C point√© sur l amboit√© B' de B

---------
pour ceut des lien externes simple (non addiches , le embede verifi s il n est pas affich√© dans le texte | par example >>
See [[table__block_1]], [[table__block_2]], and [[table__block_long]].

![[table__block_1#table]] << :
 - [[table__block_1]] veridi si   ![[table__block_1]] dans le texte et pointe sur ! [[table__block_1]] ou ! [[table__block_1#table]] pour pointer sur le paragraphe ou la section quant c est bien sp√©cifi√©. 
 donc donc les connection externes point dans le fichier combin√© comme ref√©rence crois√© interne lorsq cette reference  pointe sur un contenu embede   
 |  donc un seul fichier export√© vec ref√©rence crois√©s interne 

---------
dans un example comme  `Example: In [[test-vault/example_vault/üìöLiterature/p1]], we see that... ^ad3b86` ,>> ` ^ad3b86` danc le fichier combin√© devrait etre ` ^ad3b86-comb`:
  > et l appel dans ce fichier devrait etre [[example_writing-1#^ad3b86comb]]| donc `example_writing-1` pour considerer le basculement vers le nouveau fichier dans lequel il se trouve.
  > cela dit, le auutre embeded qui pointaient sur fichier externe et dont le fichier externe est appel√© dans le fichier combin√© doivent desormais pointer  sur cette insertion dans le fichier combin√© :
    - les pointage sur le fichiers amboit√©, par example >> `and [[table__block_long]]` dans le fichier combin√© doit pointer sur son bloc dans le mem fichier, un trc comme >> `and [[example_writing-combined-1#^ref-bloc-indiqu√©|table__block_long]]`
---------

pour les fichier appel√©s sans etre affich√©, l' ins√©rer comme les autres, mais, au dessus du bloc dans lequel il est appel√© et srtout dans les ballises de commentaire pour ne pas etre affich√©.
> a t on encore besoin de chemin long avec le nom du fichier alors que les references crois√©s son dans le document meme ?
----

boutoon dans les seeting pour activer si on travaille avec  les HIDDEN ou non
--------
 (genre facile de connecter api ou donn√© a partir de Yaml structur√©) l. le·π°commandes par example dans un yaml que un utilisteur lambda eut editer sans rentrer dnas le code ; les textes quui doivent servir a l'interface, pour   etre traduit facilement par un utilisateur lambda
-------
 ajouter un chiffre si le fichier exite deja pour distinguer | splite l espace pour affficher la nouvelle note combin√© a droit pour voir les 2 cote a cote
------ UI
t√© de l autre apres la combinaison  dan sl onglet a droite
> liste des commandes dans un yaml 
> ui pour combinaison manuel >> responsive| taille resonable // a la fenetre

 champs dan slequel on  peut glisser-disposer des fichiers et arranger l'ordre au besoin, et combiner un un seul fichier
 donc glisser-deposer depuis obsidian ou extrieur>>, arrager l ordre si +sieiur fichiers 
 et combiner comme d abitude, avec les amboit√© si inclus
  survol du bouton de coversion fait apparaitre le converti 
 un champs avvec nom par defaut avec possibilit√© d'dition

----------------
corriger et build 